//pipeline project for declarative way

pipeline{

agent any

triggers {
  pollSCM '* * * * *'
}
options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}

tools{
maven 'maven3.9.4'
}
stages{

//Getting the code from GitHub Repo
  stage('CheckoutCode'){
  steps{
  slackNotification('STARTED')
  git branch: 'development', credentialsId: '4ad158bf-ea06-4120-af32-9526b30e2d11', url: 'https://github.com/aruna-ojha-expt/maven-web-application.git'
  }
  }
//After getting coe doing the build using maven
  stage('Build'){
  steps{
   sh "mvn clean package"
   }
   }
 
  //Executing sonarqube Report
  stage('SOnarQubeReport'){
  steps{
   sh "mvn sonar:sonar"
  }
  }
*/
  //Uploading artifcats into Nexus repo
  stage('UploadArtifactinotNexus'){
  steps{
   sh "mvn deploy"
  }
  }
  /*
stage('DeployAppintoTomcatServer'){
  steps{
  sshagent(['11da9b68-27c9-4c5d-b59d-b31bf9bb6973']){
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war  ec2-user@172.31.35.182:/opt/apache-tomcat-10.1.11/webapps"
}
}
}
}//Stages Closing
post {
  success {
    slackNotification(currentBuild.result)
  }
  failure {
    slackNotification(currentBuild.result)
  }
}

}//pipeline closing

// code snippet for slckNotification

def slackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary , channel: "#walmart")
}
