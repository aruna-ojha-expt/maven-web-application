node {

echo "jenkins url is: ${env.JENKINS_URL}"
echo "jenkins node name is: ${env.NODE_NAME}"
echo "job name is: ${env.JOB_NAME}"


def mavenHome = tool name: "maven3.9.1"

try{
slackNotifications('STARTED')

stage ('gitCode'){
git branch: 'development', credentialsId: 'd7801b14-e86d-4a36-9330-e59c6b0bccb3', url: 'https://github.com/aruna-ojha-expt/maven-web-application.git'

}
stage ('buldPackage'){
sh "${mavenHome}/bin/mvn clean package"
}
stage ('exicuteSonarqubeReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}
stage ('uploadArtifactintoArtifactRepo'){
sh "${mavenHome}/bin/mvn clean deploy"
}
stage ('DeployInContainer'){
sshagent(['1cfea5bf-3e51-4c3e-9dd6-7928eb9e7cc3']){
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.42.126:/opt/apache-tomcat-9.0.73/webapps"
}
}

}//try closing

catch(e) {
 // If there was an exception thrown, the build failed
     currentBuild.result = "FAILED"
     throw e
 }finally {
    // Success or failure, always send notifications
    sendSlackNotifications(currentBuild.result)
  }

}//node closing tag


// code snippet for slckNotification

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
